docs pytest
https://docs.pytest.org/en/stable/how-to/usage.html#modifying-python-traceback-printing

HTML Attribute Referencee
https://www.w3schools.com/tags/ref_attributes.asp

Explicit Waits

    title_is
    title_contains
    presence_of_element_located
    visibility_of_element_located
    visibility_of
    presence_of_all_elements_located
    text_to_be_present_in_element
    text_to_be_present_in_element_value
    frame_to_be_available_and_switch_to_it
    invisibility_of_element_located
    element_to_be_clickable
    staleness_of
    element_to_be_selected
    element_located_to_be_selected
    element_selection_state_to_be
    element_located_selection_state_to_be
    alert_is_present
https://selenium-python.readthedocs.io/api.html#module-selenium.webdriver.support.expected_conditions


//driver chrom
https://sites.google.com/chromium.org/driver/downloads

//Css
https://suninjuly.github.io/blog_example.html
<div id="post2" class="item">
    <div class="title second">After bathing</div>
    <img src="./images/bad_dog.jpg">
</div>
#post2 .title
#post2 > div.title
#posts > .item:nth-child(2) > .title
Псевдо-класс :nth-child(2) — позволяет найти второй по порядку элемент среди дочерних элементов для #posts.
Затем с помощью конструкции > .title мы указываем, что нам нужен элемент .title,
родителем которого является найденный ранее элемент .item.

find_element(By.ID, value) — поиск по уникальному атрибуту id элемента.
     input4 = browser.find_element(By.ID,'country')
     input4.send_keys("Test")

find_element(By.CSS_SELECTOR, value) — поиск элемента с помощью правил на основе CSS.
     radiobutton = browser.find_element(by=By.CSS_SELECTOR,value='[id="robotsRule"]')
     radiobutton.click()
     find_element(By.CSS_SELECTOR, ".basket-mini .btn-group > a")

find_element(By.XPATH, value) — поиск с помощью языка запросов XPath,
     email = browser.find_element(By.XPATH,'/html/body/div/form/div[1]/div[3]/input')
     email.send_keys('email@google.com')
find_element(By.NAME, value) — поиск по атрибуту name элемента;
     input1 = browser.find_element(By.NAME,'first_name')
     input1.send_keys("Ivan")

find_element(By.TAG_NAME, value) — поиск элемента по названию тега элемента;
     find_element(By.TAG_NAME, "select").click()

find_element(By.CLASS_NAME, value) — поиск по значению атрибута class;
      find_element(By.CLASS_NAME, value='btn.btn-default')

find_element(By.LINK_TEXT, value) — поиск ссылки на странице по полному совпадению;

find_element(By.PARTIAL_LINK_TEXT, value)


Общее
http://chromedriver.chromium.org/getting-started
https://www.guru99.com/selenium-tutorial.html — Туториал на английском, ориентирован на Java.
https://www.guru99.com/live-selenium-project.html — Можно попробовать писать автотесты для демо-сайта банка.
Тоже Java.
http://barancev.github.io/good-locators/ — что такое хорошие селекторы
http://barancev.github.io/what-is-path-env-var/ — что за PATH переменная?

Ожидания в Selenium WebDriver
https://www.selenium.dev/documentation/webdriver/waits/
https://stackoverflow.com/questions/15122864/selenium-wait-until-document-is-ready
https://blog.codeship.com/get-selenium-to-wait-for-page-load/
http://barancev.github.io/slow-loading-pages/
http://barancev.github.io/page-loading-complete/


переводчик
https://www.deepl.com/translator

гит
https://learngitbranching.js.org/ — отличный интерактивный туториал
https://git-scm.com/book/ru/v2/
https://hyperskill.org/learn/step/4802
https://githowto.com/ru

unitest
https://docs.python.org/3/library/unittest.html

ficture
https://docs.pytest.org/en/latest/how-to/xunit_setup.html?highlight=teardown
https://habr.com/ru/post/448786/

//How to use skip and xfail to deal with tests that cannot succeed
https://pytest.org/en/stable/how-to/skipping.html